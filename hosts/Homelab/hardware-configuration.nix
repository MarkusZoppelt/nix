# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.initrd.luks.devices."luks-d37b3962-93a0-4be5-8e59-22587905dd05".device = "/dev/disk/by-uuid/d37b3962-93a0-4be5-8e59-22587905dd05";
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f3586d32-ef30-48eb-952e-6251937b0615";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-83eaa0fb-9656-4f5d-8c6f-3217d9307ce7".device = "/dev/disk/by-uuid/83eaa0fb-9656-4f5d-8c6f-3217d9307ce7";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/489D-BD21";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/mnt/usb-media" =
    { device = "/dev/disk/by-uuid/f7d85995-7d39-42fb-b6cf-5456395c8ac8";
      fsType = "ext4";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/091f72b2-b9c8-4d5e-8940-1b837332c93d"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
